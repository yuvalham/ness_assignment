name: CI/CD

on:
  push:
    branches: 
      - main 

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set-version.outputs.version }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # get all commits and tags

      # # Restore & Build
      # - name: Setup .NET
      #   uses: actions/setup-dotnet@v3
      #   with: 
      #     dotnet-version: '8.0.411'

      # # make sure all the tools are installed - docker / trivy 

      # - name: Restore
      #   run: dotnet restore src/App/App.csproj

      # - name: Build
      #   run: dotnet build src/App/App.csproj --configuration Release --no-restore

      # # Test
      # - name: Test
      #   run: dotnet test tests/App.Tests/App.Tests.csproj --configuration Release

      # Versioning
      - name: Get version from tag
        id: set-version
        run: |
          TAG=$(git describe --tags --abbrev=0)
          echo "version=$TAG" >> $GITHUB_OUTPUT

      # Docker image build
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USER }}/hello-world:${{ steps.set-version.outputs.version }} .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.31.0
        with:
          image-ref: 'docker.io/${{ secrets.DOCKERHUB_USER }}/hello-world:${{ steps.set-version.outputs.version }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      # - name: Install Trivy
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y wget gnupg lsb-release
      #     wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
      #     echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main \
      #       | sudo tee /etc/apt/sources.list.d/trivy.list
      #     sudo apt-get update
      #     sudo apt-get install -y trivy

      # Security scan (Trivy)
      # - name: Scan image with Trivy
      #   run: |
      #     trivy image --exit-code 1 --severity HIGH,CRITICAL ${{ secrets.DOCKERHUB_USER }}/hello-world:${{ steps.set-version.outputs.version }}

         # Run & Verify output
      - name: Run container and verify
        run: |
          container_output=$(docker run ${{ secrets.DOCKERHUB_USER }}/hello-world:${{ steps.set-version.outputs.version }})
          if [ "$container_output" = "Hello World" ]; then
            echo "Successfully printed Hello World"
          else
            echo "Unexpected output: '$container_output'"
            exit 1
          fi

      # Push to Docker Hub
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USER }}" --password-stdin

      - name: Push image
        run: |
          docker push ${{ secrets.DOCKERHUB_USER }}/hello-world:${{ steps.set-version.outputs.version }}

  print-version:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Print Version
        run: |
          echo "Deployed version: ${{ needs.build-and-push.outputs.version }}"
